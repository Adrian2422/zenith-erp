// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["staff"]
}

model User {
  userId       Int           @id @default(autoincrement()) @map("user_id")
  keycloakId   String        @unique
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  address      Address?
  settings     Settings?

  @@map("users")
  @@schema("staff")
}

model Address {
  addressId  Int     @id @default(autoincrement()) @map("address_id")
  country    String?
  city       String?
  street     String?
  postalCode String?  @map("postal_code")
  buildingNo String? @map("building_no")
  localNo    String? @map("local_no")
  user       User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId     Int     @unique @map("user_id")

  @@map("addresses")
  @@schema("staff")
}

model Settings {
  settingsId Int      @id @default(autoincrement()) @map("settings_id")
  theme     String    @default("light")
  language  String    @default("pl-PL")
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId    Int      @unique @map("user_id")

  @@map("settings")
  @@schema("staff")
}
