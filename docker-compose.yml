services:
  postgres:
    image: postgres:17
    container_name: zenith-erp-db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
    networks:
      - zenith-erp-network
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-keycloak.sql:/docker-entrypoint-initdb.d/init-keycloak.sql

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://zenith-erp-db:5432/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASS}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
    command: ['start-dev']
    networks:
      - zenith-erp-network
    ports:
      - '8080:8080'
    depends_on:
      - postgres

  backend:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: zenith-erp-be
    restart: always
    environment:
      APP_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      SERVER_PORT: ${SERVER_PORT}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    networks:
      - zenith-erp-network
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - keycloak

  frontend:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    container_name: zenith-erp-fe
    restart: always
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    networks:
      - zenith-erp-network
    ports:
      - '80:80'
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  zenith-erp-network:
    driver: bridge
